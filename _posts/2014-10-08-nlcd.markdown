---
layout: post
title: "Spatial data extraction around buffered points in R"
date: 2014-11-08 21:40
comments: true
categories:
---

Quantifying spatial data (e.g. land cover) around points can be done in a variety of ways, some of which require considerable amounts of patience, clicking around, and/or cash for a license.
Here's a bit of code that I cobbled together to quickly extract land cover data from the [National Land Cover Database](http://www.mrlc.gov/index.php) for buffered regions around points (e.g. small ponds, point-count locations, etc.), in this case, [U.S. capitals](http://bl.ocks.org/sjengle/5315515#us-capitals.csv).

Here, extract_cover() is a function to do the extraction (with the help of the [raster](http://cran.r-project.org/web/packages/raster/index.html) package), and extraction.R makes a parallel call to the function using the [doMC](http://cran.r-project.org/web/packages/doMC/index.html) package:

{% highlight r %}
# Function to extract the data in R instead of Arc
# inputs: year, buffer size (in meters), point data file,
#   cover data directory, and output file directory
# output: csv file with site id, cover type, and % in buffer

extract_cover <- function(year, buffer,
                          point_d = "sites.csv",
                          data_dir="NLCD_data",
                          write_dir="extracted"){
  require(raster)
  require(rgdal)
  require(stringr)

  # load cover data
  filename <- paste(data_dir, "/nlcd_",
                    year,
                    "_landcover_2011_edition_2014_03_31.img",
                    sep="")
  NLCD <- raster(filename)

  # load site data
  sites <- read.csv(point_d, header=T)  
  coords <- sites[, c("longitude", "latitude")]

  #convert lat/lon to appropriate projection
  names(coords) <- c("x", "y")
  coordinates(coords) <- ~x + y
  proj4string(coords) <- CRS("+proj=longlat +ellps=WGS84 +datum=WGS84")
  crs_args <- NLCD@crs@projargs
  sites_transformed <- spTransform(coords, CRS(crs_args))

  #extract land cover data for each point, given buffer size
  Landcover <- extract(NLCD, sites_transformed, buffer=buffer)

  # summarize each site's data by proportion of each cover type
  summ <- lapply(Landcover, function(x){
    prop.table(table(x))
  }
  )

  # generate land cover number to name conversions
  num.codes <- unique(unlist(Landcover))
  cover.names <- NLCD@data@attributes[[1]]$Land.Cover.Class[num.codes + 1]
  levels(cover.names)[1] <- NA # first level is ""
  conversions <- data.frame(num.codes, cover.names)
  conversions <- na.omit(conversions)
  conversions <- conversions[order(conversions$num.codes),]

  # convert to data frame
  mydf <- data.frame(id = rep(sites$id, lapply(summ, length)),
                     cover = names(unlist(summ)),
                     percent = unlist(summ)
  )

  # create cover name column
  mydf$cover2 <- mydf$cover
  levels(mydf$cover2) <- conversions$cover.names

  # write output
  out_name <- paste(write_dir, "/",
                    year, "_cover_", buffer,
                    "_m_buffer.csv", sep="")
  write.csv(mydf, out_name)
}
{% endhighlight %}

{% highlight r %}
# Script to actually extract the data at various buffer distances
# parallelized for speed (one core per year)
library(doMC)

years <- c(2001, 2006, 2011)
nyears <- length(years)
registerDoMC(nyears)

# input vector of distances (in meters)
buffer_distances <- c(1000)

foreach (i=1:nyears) %dopar% {
  for (j in buffer_distances){
    extract_cover(year = years[i], buffer=j)
  }
}
{% endhighlight %}

**Resources**

- [Large .img file processing in R (GIS) on Stack Overflow by Israel Del Toro](http://stackoverflow.com/questions/15824853/large-img-file-processing-in-r-gis)
- [Population and Location of U.S. State Capitals csv file](http://bl.ocks.org/sjengle/5315515#us-capitals.csv)
- [NLCD website](http://www.mrlc.gov/index.php)
